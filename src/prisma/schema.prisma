generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model League {
  id              String   @id @default(cuid())
  name            String   @unique
  abbreviation    String   @unique
  isActive        Boolean  @map("is_active")
  inauguralSeason String   @map("inaugural_season")
  finalSeason     String?  @map("final_season")
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  franchises Franchise[]
  seasons    Season[]

  @@map("league")
}

model Franchise {
  id              String   @id @default(cuid())
  name            String
  abbreviation    String
  leagueId        String   @map("league_id")
  isActive        Boolean  @map("is_active")
  inauguralSeason String   @map("inaugural_season")
  finalSeason     String?  @map("final_season")
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  league League @relation(fields: [leagueId], references: [id])
  teams  Team[]

  @@map("franchise")
}

model Team {
  id              String   @id @default(cuid())
  name            String
  abbreviation    String
  franchiseId     String   @map("franchise_id")
  isActive        Boolean  @map("is_active")
  inauguralSeason String   @map("inaugural_season")
  finalSeason     String?  @map("final_season")
  externalId      String?  @map("external_id")
  league          String
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  franchise   Franchise    @relation(fields: [franchiseId], references: [id])
  teamSeasons TeamSeason[]

  @@map("team")
}

model Player {
  id             String    @id @default(cuid())
  fullName       String    @map("full_name")
  firstName      String    @map("first_name")
  middleName     String?   @map("middle_name")
  lastName       String    @map("last_name")
  birthDate      String    @map("birth_date")
  birthCity      String    @map("birth_city")
  birthState     String?   @map("birth_state")
  birthCountry   String    @map("birth_country")
  height         Int
  weight         Int
  position       String
  shootingHand   String    @map("shooting_hand")
  college        String?
  recruitingYear Int?      @map("recruiting_year")
  recruitingRank Int?      @map("recruiting_rank")
  draftTeam      String?   @map("draft_team")
  draftRound     Int?      @map("draft_round")
  draftPosition  Int?      @map("draft_position")
  nbaDebut       DateTime? @map("nba_debut")
  externalId     String?   @map("external_id")
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")

  playerSeasons PlayerSeason[]
  playerGames   PlayerGame[]

  @@map("player")
}

enum SeasonType {
  REG // Regular Season
  IST // In-Season Tournament but non regular season game
  PST // Postseason
  PRE // Preseason
  PIT // Play-In Tournament
}

model Season {
  id         String     @id @default(cuid())
  year       Int
  startDate  String     @map("start_date")
  endDate    String     @map("end_date")
  leagueId   String     @map("league_id")
  isCurrent  Boolean    @map("is_current")
  type       SeasonType
  createdAt  DateTime   @default(now()) @map("created_at")
  updatedAt  DateTime   @updatedAt @map("updated_at")
  externalId String?    @map("external_id")

  league        League         @relation(fields: [leagueId], references: [id])
  teamSeasons   TeamSeason[]
  seasonGames   Game[]
  playerSeasons PlayerSeason[]

  @@map("season")
}

model TeamSeason {
  id                 String  @id @default(cuid())
  teamId             String  @map("team_id")
  seasonId           String  @map("season_id")
  isCurrent          Boolean @map("is_current")
  venueId            String  @map("venue_id")
  conference         String?
  division           String?
  attendance         Int     @default(0)
  attendanceRank     Int     @default(1) @map("attendance_rank")
  gamesPlayed        Int     @default(0) @map("games_played")
  gamesWon           Int     @default(0) @map("games_won")
  gamesLost          Int     @default(0) @map("games_lost")
  points             Int     @default(0)
  oppPoints          Int     @default(0) @map("opp_points")
  minutesPlayed      Decimal @default(0) @map("minutes_played")
  fieldGoals         Int     @default(0) @map("field_goals")
  fieldGoalAttempts  Int     @default(0) @map("field_goal_attempts")
  threePointers      Int     @default(0) @map("three_pointers")
  threePointAttempts Int     @default(0) @map("three_point_attempts")
  twoPointers        Int     @default(0) @map("two_pointers")
  twoPointAttempts   Int     @default(0) @map("two_point_attempts")
  freeThrows         Int     @default(0) @map("free_throws")
  freeThrowAttempts  Int     @default(0) @map("free_throw_attempts")
  assists            Int     @default(0)
  rebounds           Int     @default(0)
  offRebounds        Int     @default(0) @map("off_rebounds")
  defRebounds        Int     @default(0) @map("def_rebounds")
  steals             Int     @default(0)
  blocks             Int     @default(0)
  turnovers          Int     @default(0)
  personalFouls      Int     @default(0) @map("personal_fouls")
  possessions        Decimal @default(0)
  oppPossessions     Decimal @default(0) @map("opp_possessions")
  pace               Decimal @default(0)
  offRating          Decimal @default(0) @map("off_rating")
  defRating          Decimal @default(0) @map("def_rating")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  team            Team            @relation(fields: [teamId], references: [id])
  season          Season          @relation(fields: [seasonId], references: [id])
  homeGames       Game[]          @relation("HomeTeam")
  awayGames       Game[]          @relation("AwayTeam")
  teamSeasonGames TeamGame[]
  playerSeasons   PlayerSeason[]
  venue           Venue           @relation(fields: [venueId], references: [id])
  coachGames      HeadCoachGame[]

  @@map("team_season")
}

model Venue {
  id         String   @id @default(cuid())
  name       String
  capacity   Int
  address    String
  city       String
  state      String?
  zip        String?
  country    String
  externalId String?  @map("external_id")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  games       Game[]
  teamSeasons TeamSeason[]

  @@map("venue")
}

model Game {
  id                String   @id @default(cuid())
  seasonId          String   @map("season_id")
  date              String
  homeTeamId        String   @map("home_team_id")
  awayTeamId        String   @map("away_team_id")
  venueId           String   @map("venue_id")
  attendance        Int?
  durationInMinutes Int?     @map("duration_in_minutes")
  scheduledStart    DateTime @map("scheduled_start")
  homeTeamPoints    Int      @map("home_team_points")
  awayTeamPoints    Int      @map("away_team_points")
  homeTeamQ1Points  Int      @map("home_team_q1_points")
  homeTeamQ2Points  Int      @map("home_team_q2_points")
  homeTeamQ3Points  Int      @map("home_team_q3_points")
  homeTeamQ4Points  Int      @map("home_team_q4_points")
  homeTeamOTPoints  Int?     @map("home_team_ot_points")
  homeTeamOT2Points Int?     @map("home_team_ot2_points")
  homeTeamOT3Points Int?     @map("home_team_ot3_points")
  homeTeamOT4Points Int?     @map("home_team_ot4_points")
  homeTeamOT5Points Int?     @map("home_team_ot5_points")
  homeTeamOT6Points Int?     @map("home_team_ot6_points")
  awayTeamQ1Points  Int      @map("away_team_q1_points")
  awayTeamQ2Points  Int      @map("away_team_q2_points")
  awayTeamQ3Points  Int      @map("away_team_q3_points")
  awayTeamQ4Points  Int      @map("away_team_q4_points")
  awayTeamOTPoints  Int?     @map("away_team_ot_points")
  awayTeamOT2Points Int?     @map("away_team_ot2_points")
  awayTeamOT3Points Int?     @map("away_team_ot3_points")
  awayTeamOT4Points Int?     @map("away_team_ot4_points")
  awayTeamOT5Points Int?     @map("away_team_ot5_points")
  awayTeamOT6Points Int?     @map("away_team_ot6_points")
  externalId        String?  @map("external_id")
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")
  notes             String[]

  season        Season         @relation(fields: [seasonId], references: [id])
  homeTeam      TeamSeason     @relation(name: "HomeTeam", fields: [homeTeamId], references: [id])
  awayTeam      TeamSeason     @relation(name: "AwayTeam", fields: [awayTeamId], references: [id])
  venue         Venue          @relation(fields: [venueId], references: [id])
  teamGames     TeamGame[]
  playerGames   PlayerGame[]
  officialGames OfficialGame[]

  @@map("game")
}

model TeamGame {
  id                 String   @id @default(cuid())
  teamSeasonId       String   @map("team_season_id")
  gameId             String   @map("season_game_id")
  points             Int
  oppPoints          Int      @map("opp_points")
  secondsPlayed      Int      @map("seconds_played")
  fieldGoals         Int      @map("field_goals")
  fieldGoalAttempts  Int      @map("field_goal_attempts")
  threePointers      Int      @map("three_pointers")
  threePointAttempts Int      @map("three_point_attempts")
  twoPointers        Int      @map("two_pointers")
  twoPointAttempts   Int      @map("two_point_attempts")
  freeThrows         Int      @map("free_throws")
  freeThrowAttempts  Int      @map("free_throw_attempts")
  assists            Int
  rebounds           Int
  offRebounds        Int      @map("off_rebounds")
  defRebounds        Int      @map("def_rebounds")
  steals             Int
  blocks             Int
  turnovers          Int
  personalFouls      Int      @map("personal_fouls")
  possessions        Decimal
  oppPossessions     Decimal  @map("opp_possessions")
  pace               Decimal
  offRating          Decimal  @map("off_rating")
  defRating          Decimal  @map("def_rating")
  createdAt          DateTime @default(now()) @map("created_at")
  updatedAt          DateTime @updatedAt @map("updated_at")

  teamSeason TeamSeason      @relation(fields: [teamSeasonId], references: [id])
  seasonGame Game            @relation(fields: [gameId], references: [id])
  coachGames HeadCoachGame[]

  @@map("team_game")
}

model PlayerSeason {
  id                   String   @id @default(cuid())
  playerId             String   @map("player_id")
  teamSeasonId         String   @map("team_season_id")
  seasonId             String   @map("season_id")
  gamesPlayed          Int      @default(0) @map("games_played")
  gamesStarted         Int      @default(0) @map("games_started")
  isTwoWayContract     Boolean  @map("is_two_way_contract")
  jerseyNumbers        Int[]    @map("jersey_number")
  points               Int      @default(0)
  secondsPlayed        Int      @default(0) @map("seconds_played")
  fieldGoals           Int      @default(0) @map("field_goals")
  fieldGoalAttempts    Int      @default(0) @map("field_goal_attempts")
  threePointers        Int      @default(0) @map("three_pointers")
  threePointAttempts   Int      @default(0) @map("three_point_attempts")
  twoPointers          Int      @default(0) @map("two_pointers")
  twoPointAttempts     Int      @default(0) @map("two_point_attempts")
  freeThrows           Int      @default(0) @map("free_throws")
  freeThrowAttempts    Int      @default(0) @map("free_throw_attempts")
  assists              Int      @default(0)
  rebounds             Int      @default(0)
  offRebounds          Int      @default(0) @map("off_rebounds")
  defRebounds          Int      @default(0) @map("def_rebounds")
  steals               Int      @default(0)
  blocks               Int      @default(0)
  turnovers            Int      @default(0)
  personalFouls        Int      @default(0) @map("personal_fouls")
  plusMinus            Int      @default(0) @map("plus_minus")
  offensivePossessions Decimal  @default(0) @map("offensive_possessions")
  defensivePossessions Decimal  @default(0) @map("defensive_possessions")
  createdAt            DateTime @default(now()) @map("created_at")
  updatedAt            DateTime @updatedAt @map("updated_at")

  player      Player       @relation(fields: [playerId], references: [id])
  teamSeason  TeamSeason   @relation(fields: [teamSeasonId], references: [id])
  season      Season       @relation(fields: [seasonId], references: [id])
  playerGames PlayerGame[]

  @@map("player_season")
}

model PlayerGame {
  id                   String   @id @default(cuid())
  playerId             String   @map("player_id")
  gameId               String   @map("game_id")
  playerSeasonId       String   @map("player_season_id")
  points               Int
  secondsPlayed        Int      @map("seconds_played")
  didStart             Boolean  @map("did_start")
  fieldGoals           Int      @map("field_goals")
  fieldGoalAttempts    Int      @map("field_goal_attempts")
  threePointers        Int      @map("three_pointers")
  threePointAttempts   Int      @map("three_point_attempts")
  twoPointers          Int      @map("two_pointers")
  twoPointAttempts     Int      @map("two_point_attempts")
  freeThrows           Int      @map("free_throws")
  freeThrowAttempts    Int      @map("free_throw_attempts")
  assists              Int
  rebounds             Int
  offRebounds          Int      @map("off_rebounds")
  defRebounds          Int      @map("def_rebounds")
  steals               Int
  blocks               Int
  turnovers            Int
  personalFouls        Int      @map("personal_fouls")
  plusMinus            Int      @map("plus_minus")
  offensivePossessions Decimal  @default(0) @map("offensive_possessions")
  defensivePossessions Decimal  @default(0) @map("defensive_possessions")
  createdAt            DateTime @default(now()) @map("created_at")
  updatedAt            DateTime @updatedAt @map("updated_at")

  player       Player       @relation(fields: [playerId], references: [id])
  game         Game         @relation(fields: [gameId], references: [id])
  playerSeason PlayerSeason @relation(fields: [playerSeasonId], references: [id])

  @@map("player_game")
}

model Official {
  id         String   @id @default(cuid())
  fullName   String   @map("first_name")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  externalId String?  @map("external_id")

  officialGames OfficialGame[]

  @@map("official")
}

model OfficialGame {
  id         String   @id @default(cuid())
  officialId String   @map("official_id")
  gameId     String   @map("game_id")
  number     Int
  assignment String
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  official Official @relation(fields: [officialId], references: [id])
  game     Game     @relation(fields: [gameId], references: [id])

  @@map("official_game")
}

model Coach {
  id         String   @id @default(cuid())
  fullName   String   @map("full_name")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  externalId String?  @map("external_id")

  coachGames HeadCoachGame[]

  @@map("coach")
}

model HeadCoachGame {
  id           String   @id @default(cuid())
  coachId      String   @map("coach_id")
  teamGameId   String   @map("team_game_id")
  teamSeasonId String   @map("season_id")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  coach      Coach      @relation(fields: [coachId], references: [id])
  teamGame   TeamGame   @relation(fields: [teamGameId], references: [id])
  teamSeason TeamSeason @relation(fields: [teamSeasonId], references: [id])

  @@map("head_coach_game")
}
