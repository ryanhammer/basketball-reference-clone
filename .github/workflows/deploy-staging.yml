name: 🚀 Deploy
on:
  push:
    branches:
      - staging
  pull_request: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

jobs:
  lint:
    name: ⬣ ESLint
    runs-on: ubuntu-22.04
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: 🔬 Lint
        run: npm run lint

  typecheck:
    name: ʦ TypeScript
    runs-on: ubuntu-22.04
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: 🔎 Type check
        run: npm run typecheck --if-present

  # vitest:
  #   name: ⚡ Vitest
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - name: ⬇️ Checkout repo
  #       uses: actions/checkout@v3

  #     - name: ⎔ Setup node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 20

  #     - name: 📥 Download deps
  #       uses: bahmutov/npm-install@v1

  #     - name: 🏄 Copy test env vars
  #       run: cp .env.example .env

  #     - name: ⚡ Run vitest
  #       run: npm run test -- --coverage

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-22.04
    needs: [lint, typecheck]
    # only build/deploy staging branch on pushes
    if:
      ${{ (github.ref == 'refs/heads/staging') &&
      github.event_name == 'push' }}

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 👀 Read app name
        uses: SebRollen/toml-action@v1.0.2
        id: app_name
        with:
          file: 'fly.toml'
          field: 'app'

      - name: 🎈 Setup Fly
        uses: superfly/flyctl-actions/setup-flyctl@v1.4

      - name: 🚀 Deploy Staging
        if: ${{ github.ref == 'refs/heads/staging' }}
        run:
          flyctl deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }}
          --app ${{ steps.app_name.outputs.value }}-staging
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

